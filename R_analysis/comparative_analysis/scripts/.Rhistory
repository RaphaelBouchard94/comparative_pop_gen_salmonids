legend.position = c(0.2,0.9),
strip.text = element_text(size = 18),
strip.background = element_rect(fill = "white"),panel.spacing = unit(2, "lines"))
ggplot(fst,aes(x = values, y = log10(m), shape=species, linetype = species))+
geom_point(size=3,alpha = 0.8)+
geom_smooth(method="lm",color="black",alpha = 0.3,size = 1,se = 0.95)+
scale_shape_manual(values = c(1,16),labels = c(expression(italic("C. clupeaformis")),expression(italic("S. fontinalis"))))+
scale_linetype_manual(values = c(2,3),labels = c(expression(italic("C. clupeaformis")),expression(italic("S. fontinalis"))))+
xlab("Geographic distance (km)")+
ylab("Gene flow (log10)")+
theme_bw()+
theme(panel.grid = element_blank(),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_blank(),
legend.text = element_text(size = 18),
legend.position = c(0.2,0.9),
strip.text = element_text(size = 18),
strip.background = element_rect(fill = "white"),panel.spacing = unit(2, "lines"))
ggplot(fst,aes(x = values, y = log10(m), shape=species, linetype = species))+
geom_point(size=3,alpha = 0.8)+
geom_smooth(method="lm",color="black",alpha = 0.3,size = 1,se = 0.95)+
scale_shape_manual(values = c(1,16),labels = c(expression(italic("C. clupeaformis")),expression(italic("S. fontinalis"))))+
scale_linetype_manual(values = c(2,3),labels = c(expression(italic("C. clupeaformis")),expression(italic("S. fontinalis"))))+
xlab("Geographic distance (km)")+
ylab("Gene flow (log10)")+
theme_bw()+
theme(panel.grid = element_blank(),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_blank(),
legend.text = element_text(size = 18),
legend.position = c(0.2,0.9),
strip.text = element_text(size = 18),
strip.background = element_rect(fill = "white"),panel.spacing = unit(2, "lines"))
ggplot(fst,aes(x = values, y = log10(m), shape=species, linetype = species))+
geom_point(size=3,alpha = 0.8)+
geom_smooth(method="lm",color="black",alpha = 0.3,size = 1,se = 0.95)+
scale_shape_manual(values = c(16,1),labels = c(expression(italic("C. clupeaformis")),expression(italic("S. fontinalis"))))+
scale_linetype_manual(values = c(2,3),labels = c(expression(italic("C. clupeaformis")),expression(italic("S. fontinalis"))))+
xlab("Geographic distance (km)")+
ylab("Gene flow (log10)")+
theme_bw()+
theme(panel.grid = element_blank(),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_blank(),
legend.text = element_text(size = 18),
legend.position = c(0.2,0.9),
strip.text = element_text(size = 18),
strip.background = element_rect(fill = "white"),panel.spacing = unit(2, "lines"))
ggplot(fst,aes(x = values, y = log10(m), shape=species, linetype = species))+
geom_point(size=3,alpha = 0.8)+
geom_smooth(method="lm",color="black",alpha = 0.3,size = 1,se = F)+
scale_shape_manual(values = c(16,1),labels = c(expression(italic("C. clupeaformis")),expression(italic("S. fontinalis"))))+
scale_linetype_manual(values = c(2,3),labels = c(expression(italic("C. clupeaformis")),expression(italic("S. fontinalis"))))+
xlab("Geographic distance (km)")+
ylab("Gene flow (log10)")+
theme_bw()+
theme(panel.grid = element_blank(),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_blank(),
legend.text = element_text(size = 18),
legend.position = c(0.2,0.9),
strip.text = element_text(size = 18),
strip.background = element_rect(fill = "white"),panel.spacing = unit(2, "lines"))
ggplot(fst,aes(x = values, y = log10(m), shape=species, linetype = species))+
geom_point(size=3,alpha = 0.8)+
geom_smooth(method="lm",color="black",alpha = 0.3,size = 1,se = 0.95)+
scale_shape_manual(values = c(16,1),labels = c(expression(italic("C. clupeaformis")),expression(italic("S. fontinalis"))))+
scale_linetype_manual(values = c(2,3),labels = c(expression(italic("C. clupeaformis")),expression(italic("S. fontinalis"))))+
xlab("Geographic distance (km)")+
ylab("Gene flow (log10)")+
theme_bw()+
theme(panel.grid = element_blank(),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_blank(),
legend.text = element_text(size = 18),
legend.position = c(0.2,0.9),
strip.text = element_text(size = 18),
strip.background = element_rect(fill = "white"),panel.spacing = unit(2, "lines"))
ggplot(fst,aes(x = values, y = log10(m), shape=species, linetype = species))+
geom_point(size=3,alpha = 0.8)+
geom_smooth(method="lm",color="black",alpha = 0.3,size = 1,se = 0.95)+
scale_shape_manual(values = c(16,1),labels = c(expression(italic("C. clupeaformis")),expression(italic("S. fontinalis"))))+
scale_linetype_manual(values = c(2,3),labels = c(expression(italic("C. clupeaformis")),expression(italic("S. fontinalis"))))+
xlab("Geographic distance (km)")+
ylab("log10(Gene flow)")+
theme_bw()+
theme(panel.grid = element_blank(),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_blank(),
legend.text = element_text(size = 18),
legend.position = c(0.2,0.9),
strip.text = element_text(size = 18),
strip.background = element_rect(fill = "white"),panel.spacing = unit(2, "lines"))
ggsave("figures/gene_flow.jpeg",width = 8, height = 8)
ggplot(fst,aes(x = values, y = log10(m), shape=species, linetype = species))+
geom_point(size=3,alpha = 0.8)+
geom_smooth(method="lm",color="black",alpha = 0.3,size = 1,se = 0.95)+
scale_shape_manual(values = c(16,1),labels = c(expression(italic("C. clupeaformis")),expression(italic("S. fontinalis"))))+
scale_linetype_manual(values = c(2,3),labels = c(expression(italic("C. clupeaformis")),expression(italic("S. fontinalis"))))+
xlab("Geographic distance (km)")+
ylab("log10(Gene flow)")+
theme_bw()+
theme(panel.grid = element_blank(),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_blank(),
legend.text = element_text(size = 18),
legend.position = c(0.8,0.9),
strip.text = element_text(size = 18),
strip.background = element_rect(fill = "white"),panel.spacing = unit(2, "lines"))
ggplot(fst,aes(x = values, y = log10(m), shape=species, linetype = species))+
geom_point(size=3,alpha = 0.8)+
geom_smooth(method="lm",color="black",alpha = 0.3,size = 1,se = 0.95)+
scale_shape_manual(values = c(16,1),labels = c(expression(italic("C. clupeaformis")),expression(italic("S. fontinalis"))))+
scale_linetype_manual(values = c(2,3),labels = c(expression(italic("C. clupeaformis")),expression(italic("S. fontinalis"))))+
xlab("Geographic distance (km)")+
ylab("log10(Gene flow)")+
theme_bw()+
theme(panel.grid = element_blank(),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_blank(),
legend.text = element_text(size = 18),
legend.position = c(0.9,0.9),
strip.text = element_text(size = 18),
strip.background = element_rect(fill = "white"),panel.spacing = unit(2, "lines"))
ggplot(fst,aes(x = values, y = log10(m), shape=species, linetype = species))+
geom_point(size=3,alpha = 0.8)+
geom_smooth(method="lm",color="black",alpha = 0.3,size = 1,se = 0.95)+
scale_shape_manual(values = c(16,1),labels = c(expression(italic("C. clupeaformis")),expression(italic("S. fontinalis"))))+
scale_linetype_manual(values = c(2,3),labels = c(expression(italic("C. clupeaformis")),expression(italic("S. fontinalis"))))+
xlab("Geographic distance (km)")+
ylab("log10(Gene flow)")+
theme_bw()+
theme(panel.grid = element_blank(),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_blank(),
legend.text = element_text(size = 18),
legend.position = c(0.8,0.9),
strip.text = element_text(size = 18),
strip.background = element_rect(fill = "white"),panel.spacing = unit(2, "lines"))
ggsave("figures/gene_flow.jpeg",width = 8, height = 8)
setwd(dir = "~/Desktop/Baie_James_Paper/01_population_genomics/comparative_analysis/")
library(tidyverse)
library(magrittr)
library(marmap)
library(reshape2)
JB <- getNOAA.bathy(lon1 = -82.084, lon2 = -78,
lat1 = 51.021, lat2 = 55, resolution = 1)
sites <- read.table("~/Desktop/Baie_James_Paper/01_population_genomics/comparative_analysis/data/pop_dispersal.txt",header=T)
marsites<- sites %>% select(long,lat) %>% rename(x=long,y=lat)
trans1 <- trans.mat(JB,min.depth = 5)
dist1 <- lc.dist(trans1,marsites,res="dist")
dist1
mat_dist<-as.matrix(dist1)
dfdist <- setNames(melt(mat_dist), c('pop1', 'pop2', 'values'))
fst_cocl <- read.table("~/Desktop/Baie_James_Paper/01_population_genomics/comparative_analysis/data/fst/fst_cocl.tsv")
colnames(fst_cocl) <- c("fst","pop1","pop2","m")
fst_cocl$species <- rep("Coregonus clupeaformis",78)
fst_safo <- read.table("~/Desktop/Baie_James_Paper/01_population_genomics/comparative_analysis/data/fst/fst_safo.tsv")
colnames(fst_safo) <- c("fst","pop1","pop2","m")
fst_safo$species <- rep("Salvelinus fontinalis",91)
fst <- rbind(fst_cocl,fst_safo)
fst$pop1 <- gsub("CHI","KAA",fst$pop1)
fst$pop2 <- gsub("CHI","KAA",fst$pop2)
fst$pop1 <- gsub("FIS","EAS",fst$pop1)
fst$pop2 <- gsub("FIS","EAS",fst$pop2)
fst$pop1 <- gsub("MOA","SAB",fst$pop1)
fst$pop2 <- gsub("MOA","SAB",fst$pop2)
fst$pop1 <- gsub("WAS","JAC",fst$pop1)
fst$pop2 <- gsub("WAS","JAC",fst$pop2)
fst$pop1 <- factor(fst$pop1, levels=c("ROG","KAA","BIA","LAG","AQU","BEA","SAB","REN","CON","EAS","JAC","RUP","BRO","NOT"))
fst$pop2 <- factor(fst$pop2, levels=c("ROG","KAA","BIA","LAG","AQU","BEA","SAB","REN","CON","EAS","JAC","RUP","BRO","NOT"))
fst %>% ggplot(aes(x = species, y = log10(m)))+
geom_boxplot(width = 0.2)+
geom_jitter(alpha = 0.4,width = 0.03)+
ylab("log10(Gene flow)")+
xlab("")+
theme_bw()+
theme(axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_blank(),
legend.text = element_text(size = 18))
dfdist %<>% mutate(pop1_code = case_when(pop1 == 1 ~ "ROG",
pop1 == 2 ~ "KAA",
pop1 == 3 ~ "BIA",
pop1 == 4 ~ "LAG",
pop1 == 5 ~ "AQU",
pop1 == 6 ~ "BEA",
pop1 == 7 ~ "SAB",
pop1 == 8 ~ "REN",
pop1 == 9 ~ "CON",
pop1 == 10 ~ "EAS",
pop1 == 11 ~ "JAC",
pop1 == 12 ~ "RUP",
pop1 == 13 ~ "BRO",
pop1 == 14 ~ "NOT"),
pop2_code = case_when(pop2 == 1 ~ "ROG",
pop2 == 2 ~ "KAA",
pop2 == 3 ~ "BIA",
pop2 == 4 ~ "LAG",
pop2 == 5 ~ "AQU",
pop2 == 6 ~ "BEA",
pop2 == 7 ~ "SAB",
pop2 == 8 ~ "REN",
pop2 == 9 ~ "CON",
pop2 == 10 ~ "EAS",
pop2 == 11 ~ "JAC",
pop2 == 12 ~ "RUP",
pop2 == 13 ~ "BRO",
pop2 == 14 ~ "NOT")) %>% select(-(pop1:pop2))
fst %<>% left_join(dfdist,by=c("pop1"="pop1_code","pop2"="pop2_code"),relationship = "many-to-many")
fst %<>% mutate(label_comp = paste(pop1,pop2,sep="_"))
ggplot(fst,aes(x = values, y = log10(m), shape=species, linetype = species))+
geom_point(size=3,alpha = 0.8)+
geom_smooth(method="lm",color="black",alpha = 0.3,size = 1,se = 0.95)+
scale_shape_manual(values = c(16,1),labels = c(expression(italic("C. clupeaformis")),expression(italic("S. fontinalis"))))+
scale_linetype_manual(values = c(2,3),labels = c(expression(italic("C. clupeaformis")),expression(italic("S. fontinalis"))))+
xlab("Geographic distance (km)")+
ylab("log10(Gene flow)")+
theme_bw()+
theme(panel.grid = element_blank(),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_blank(),
legend.text = element_text(size = 18),
legend.position = c(0.8,0.9),
strip.text = element_text(size = 18),
strip.background = element_rect(fill = "white"),panel.spacing = unit(2, "lines"))
fst %>% group_by(sepcies) %>% summarise(avg_m = mean(m),
ci_m = 1.96*se(m))
fst %>% group_by(species) %>% summarise(avg_m = mean(m),
ci_m = 1.96*se(m))
fst %>% group_by(species) %>% summarise(avg_m = mean(m),
ci_m = 1.96*sd(m))
fst %>% group_by(species) %>% summarise(avg_m = mean(m),
ci_m = 1.96*sd(m)/sqrt(n()))
fst %>% group_by(species) %>% summarise(avg_m = mean(m),
ci_m = sd(m))
ggplot(fst,aes(x = values, y = m, shape=species, linetype = species))+
geom_point(size=3,alpha = 0.8)+
geom_smooth(method="lm",color="black",alpha = 0.3,size = 1,se = 0.95)+
scale_shape_manual(values = c(16,1),labels = c(expression(italic("C. clupeaformis")),expression(italic("S. fontinalis"))))+
scale_linetype_manual(values = c(2,3),labels = c(expression(italic("C. clupeaformis")),expression(italic("S. fontinalis"))))+
xlab("Geographic distance (km)")+
ylab("log10(Gene flow)")+
theme_bw()+
theme(panel.grid = element_blank(),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_blank(),
legend.text = element_text(size = 18),
legend.position = c(0.8,0.9),
strip.text = element_text(size = 18),
strip.background = element_rect(fill = "white"),panel.spacing = unit(2, "lines"))
ggplot(fst,aes(x = values, y = log10(m), shape=species, linetype = species))+
geom_point(size=3,alpha = 0.8)+
geom_smooth(method="lm",color="black",alpha = 0.3,size = 1,se = 0.95)+
scale_shape_manual(values = c(16,1),labels = c(expression(italic("C. clupeaformis")),expression(italic("S. fontinalis"))))+
scale_linetype_manual(values = c(2,3),labels = c(expression(italic("C. clupeaformis")),expression(italic("S. fontinalis"))))+
xlab("Geographic distance (km)")+
ylab("log10(Gene flow)")+
theme_bw()+
theme(panel.grid = element_blank(),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_blank(),
legend.text = element_text(size = 18),
legend.position = c(0.8,0.9),
strip.text = element_text(size = 18),
strip.background = element_rect(fill = "white"),panel.spacing = unit(2, "lines"))
library(dartR)
library(tidyverse)
library(magrittr)
library(vcfR)
cocl_vcf <- read.vcfR(file = "../data/wgs_ne/filtered.vcf")
library(adegenet)
cocl_gl <- vcfR2genlight(cocl_vcf )
gl2genepop(cocl_gl, outfile = "../data/wgs_ne/cocl_genepop.gen")
cocl_gl
View(cocl_gl)
cocl_vcf <- read.vcfR(file = "../data/wgs_ne/filtered.vcf")
View(cocl_vcf)
cocl_gl <- vcfR2genlight(cocl_vcf)
View(cocl_gl)
gl2genepop(cocl_gl, outfile = "../data/wgs_ne/cocl_genepop.gen")
gl.compliance.check(gl)
gl.compliance.check(cocl_gl)
?gl.compliance.check
cocl_gl
cocl_gl@gen
?gl.compliance.check
cocl_gl@other
cocl_gl <- vcfR2genind(cocl_vcf)
cocl_genind <- vcfR2genind(cocl_vcf)
genind2genpop(cocl_genind)
cocl_genepop <- genind2genpop(cocl_genind)
cocl_genind@all.names
cocl_genind@tab
row.names(cocl_genind@tab)
sites <- read.table("~/Desktop/Baie_James_Paper/01_population_genomics/comparative_analysis/data/pop_dispersal.txt",header=T)
View(sites)
row.names(cocl_genind@tab) %>% substr( 5, 7)
pop <- row.names(cocl_genind@tab) %>% substr( 5, 7)
cocl_genepop <- genind2genpop(cocl_genind, pop = pop)
cocl_genepop <- genind2genpop(cocl_genind, pop = pop)
View(cocl_genepop)
alleleConvert<-function(combinedData){
genotypes<-combinedData[,1:length(combinedData)-1]
numericAlleles<-str_replace_all(genotypes,"NA/NA",paste(rep("0",as.numeric(combinedData)*2),collapse=""))
numericAlleles<-str_replace_all(numericAlleles,c("A"="01","C"="02","G"="03","T"="04","-"="05"))
numericAlleles<-str_replace_all(numericAlleles,",","")
}
writeGenPop <- function(gi, file.name, comment) {
if (is.list(gi)) {
# do all genind objects have the same number of loci?
if (length(unique(sapply(gi, nLoc))) != 1) stop("Number of loci per individual genind object in a list is not equal for all.")
gi.char <- gi[[1]]
loc.names <- locNames(gi[[1]])
} else {
gi.char <- gi
loc.names <- locNames(gi)
}
# Calculate the length of two alleles.
lng <- as.character(na.omit(genind2df(gi.char)[, locNames(gi.char)[1]]))
lng <- unique(nchar(lng))
stopifnot(length(lng) == 1)
cat(paste(comment, "\n"), file = file.name)
cat(paste(paste(loc.names, collapse = ", "), "\n"), file = file.name, append = TRUE)
if (is.list(gi)) {
pop.names <- seq_len(length(gi))
} else {
pop.names <- popNames(gi)
}
for (i in pop.names) {
cat("pop\n", file = file.name, append = TRUE)
if (is.list(gi)) {
intm <- gi[[i]]
loc.names <- locNames(gi[[i]])
} else {
intm <- gi[pop(gi) == i, drop = FALSE]
}
ind.names <- indNames(intm)
intm <- genind2df(intm, sep = "")
intm[is.na(intm)] <- paste(rep("0", lng), collapse = "")
out <- cbind(names = paste(ind.names, ",", sep = ""), intm[, loc.names])
write.table(out, file = file.name, row.names = FALSE, col.names = FALSE, append = TRUE, quote = FALSE)
}
return(NULL)
}
alleleConvert<-function(combinedData){
genotypes<-combinedData[,1:length(combinedData)-1]
numericAlleles<-str_replace_all(genotypes,"NA/NA",paste(rep("0",as.numeric(combinedData)*2),collapse=""))
numericAlleles<-str_replace_all(numericAlleles,c("A"="01","C"="02","G"="03","T"="04","-"="05"))
numericAlleles<-str_replace_all(numericAlleles,",","")
}
library(radiator)
write_genepop(cocl_genepop)
cocl_genind
cocl_genind@pop <- pop
cocl_genind@pop
pop
cocl_genind@pop <- as.factor(pop)
as.factor(pop)
write_genepop(cocl_genind,pop.levels = levels(as.factor(pop)))
writeGenPop(cocl_genind,file.name = "../data/wgs_ne/cocl_genind.gen")
writeGenPop(cocl_genind,file.name = "../data/wgs_ne/cocl_genind.gen",comment = "cocl_genepop")
cocl_vcf <- read.vcfR(file = "../data/wgs_ne/filtered_cocl.vcf")
cocl_genind <- vcfR2genind(cocl_vcf)
pop <- row.names(cocl_genind@tab) %>% substr( 5, 7)
cocl_genind@pop <- as.factor(pop)
writeGenPop(cocl_genind,file.name = "../data/wgs_ne/cocl_genind.gen",comment = "cocl_genepop")
View(cocl_genind)
View(cocl_vcf)
View(cocl_ne)
View(cocl_gl)
View(cocl_genepop)
View(cocl_genind)
library(hierfstat)
genind2hierfstat(cocl_genind)
cocl_fstat <- genind2hierfstat(cocl_genind)
library(dartR.popgen)
library(dartR)
gl.LDNe
cocl_gl <- vcfR2genlight(cocl_vcf)
cocl_gl
cocl_gl@ind.names
grep(cocl_gl@ind.names, "BEA")
grep(cocl_gl@ind.names, )
grep("BEA",cocl_gl@ind.names)
str_select("BEA",cocl_gl@ind.names)
str_detect("BEA",cocl_gl@ind.names)
str_detect(string = "BEA",cocl_gl@ind.names)
str_detect(string = cocl_gl@ind.names, "BEA")
cocl_gl@ind.names
ind <- cocl_gl@ind.names
ind
indexes <- grep("BEA", ind)
subset_names_BEA <- names[indexes]
indexes
subset_names_BEA <- ind[indexes]
gl.define.pop(cocl_gl,ind.list = subset_names_BEA, new = "BEA")
# Get unique population levels
pop_levels <- levels(cocl_genind@pop)
# Loop through each population
# Loop through each population
for (pop in pop_levels) {
# Extract individuals belonging to the population
indexes <- grep(pop, cocl_gl@ind.names)
subset_names <- cocl_gl@ind.names[indexes]
# Define new population in gl object
cocl_gl <- gl.define.pop(cocl_gl, ind.list = subset_names, new = pop)
# Print progress
cat("Subset defined for:", pop, "\n")
}
View(cocl_gl)
cocl_gl
gl.LDNe(cocl_gl, outfile = "cocl_ldne.txt",outpath = "../data/wgs_ne/")
gl.LDNe(cocl_gl,
outfile = "cocl_ldne.txt",
outpath = "../data/wgs_ne/",
neest.path = "~/Documents/10_Programmes/ne_estimator/")
pop_levels
cocl_gl
cocl_gl@gen
cocl_gl@pop
bea_gl <- cocl_gl[1:25,]
gl.LDNe(bea_gl,
outfile = "cocl_ldne.txt",
outpath = "../data/wgs_ne/",
neest.path = "~/Documents/10_Programmes/ne_estimator/")
View(cocl_genind)
View(cocl_vcf)
write.genepop(cocl_genind, "cocl_genind2genepop.gen",  pop=pop,  loc.names=TRUE)
library(adegenet)
write_genepop(data = cocl_genind, filename = "cocl_genind2genepop.gen",pop.levels = levels(cocl_genind@pop))
row.names(cocl_genind@tab)
strata_file <- data.frame(id = row.names(cocl_genind@tab),
pop = pop)
genomic_converter(data = cocl_genind, strata = strata_file, output = "genepop", filename = "cocl_radiator.gen")
strata_file <- data.frame(INDIVIDUALS = row.names(cocl_genind@tab),
STRATA = pop)
genomic_converter(data = cocl_genind, strata = strata_file, output = "genepop", filename = "cocl_radiator.gen")
setwd(dir = "~/Desktop/Baie_James_Paper/01_population_genomics/comparative_analysis/")
genomic_converter(data = cocl_genind, strata = strata_file, output = "genepop", filename = "data/wgs_ne/cocl_radiator.gen")
install.packages("fstcore")
genomic_converter(data = cocl_genind, strata = strata_file, output = "genepop", filename = "data/wgs_ne/cocl_radiator.gen")
radiator::detect_genomic_format(data = "../data/wgs_ne/filtered_cocl.vcf")
radiator::detect_genomic_format(data = "data/wgs_ne/filtered_cocl.vcf")
write.table(strata_file,file = "strata_cocl.tsv", sep = '\t')
write.table(strata_file,file = "data/wgs_ne/strata_cocl.tsv", sep = '\t')
genomic_converter(data = "data/wgs_ne/filtered_cocl.vcf",
strata = "data/wgs_ne/strata_cocl.tsv",
output = "genepop",
filename = "data/wgs_ne/cocl_radiator.gen")
genomic_converter(data = "data/wgs_ne/filtered_cocl.vcf",
output = "genepop",
filename = "data/wgs_ne/cocl_radiator.gen")
# Get unique population levels
pop_levels <- levels(cocl_genind@pop)
# Loop through each population
for (pop in pop_levels) {
# Extract individuals belonging to the population
indexes <- grep(pop, cocl_gl@ind.names)
subset_names <- cocl_gl@ind.names[indexes]
# Define new population in gl object
cocl_gl <- gl.define.pop(cocl_gl, ind.list = subset_names, new = pop)
# Print progress
cat("Subset defined for:", pop, "\n")
}
cocl_gl@pop
gl2genepop(
cocl_gl,
outfile = "cocl_genepop.gen",
outpath = "data/wgs_ne/",
pop_order = "alphabetic",
output_format = "2_digits",
verbose = NULL
)
