str_detect(best_lik,"Aquatuc") ~ "AQU",
str_detect(best_lik,"Beaver") ~ "BEA",
str_detect(best_lik,"Sabacunica") ~ "SAB",
str_detect(best_lik,"Renoyer") ~ "REN",
str_detect(best_lik,"Conn") ~ "CON",
str_detect(best_lik,"Eastmain") ~ "EAS",
str_detect(best_lik,"Broadback") ~ "BRO"))
trout_assignment %<>% mutate(id2 = gsub("safo","",trout_assignment$id))
het_safo %<>% left_join(trout_assignment,by = c("V1"="id2"))
het <- rbind(het_cocl,het_safo)
het$sp <- c(rep("cocl",456),rep("safo",362))
het$site <- factor(het$site,levels = c("ROG","KAA","BIA","LAG","AQU","BEA","SAB","REN","CON","EAS","JAC","RUP","BRO","NOT"))
whitefish <- ggplot(het %>% filter(!is.na(site),sp=="cocl"),aes(x = site, y = V2,fill=site))+
geom_boxplot(
width = .4, position= position_nudge(x=.2),
outlier.shape = NA)+
gghalves::geom_half_point(
side = "l",
range_scale = .3,
alpha = .5,
aes(color = site),
size = 2
) +
ylim(c(0.0015,0.0045))+
xlab("Location")+
ylab("")+
scale_fill_manual(values = rev(c("#A50026FF",
"#DD3D2DFF",
"#fddbc7",
"#F67E4BFF",
"#FDB366FF",
"#FEDA8BFF",
"#EAECCCFF",
"#abdda4",
"#74add1",
"#4575b4",
"#313695",
"#5e4fa2")
))+
scale_color_manual(values = rev(c("#A50026FF",
"#DD3D2DFF",
"#fddbc7",
"#F67E4BFF",
"#FDB366FF",
"#FEDA8BFF",
"#EAECCCFF",
"#abdda4",
"#74add1",
"#4575b4",
"#313695",
"#5e4fa2")
))+
theme_bw()+
theme(axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18,angle=45,vjust = .9,hjust=1),
axis.text.y = element_text(size = 18),
legend.title = element_blank(),
legend.text = element_text(size = 18),
legend.position = "none",
strip.text = element_text(size = 18),
strip.background = element_rect(fill = "white"),panel.spacing = unit(2, "lines"))
whitefish
ggsave("figures/het_whitefish.png")
#---> function for wilcoxon-test
tri.to.squ<-function(x)
{
rn<-row.names(x)
cn<-colnames(x)
an<-unique(c(cn,rn))
myval<-x[!is.na(x)]
mymat<-matrix(1,nrow=length(an),ncol=length(an),dimnames=list(an,an))
for(ext in 1:length(cn))
{
for(int in 1:length(rn))
{
if(is.na(x[row.names(x)==rn[int],colnames(x)==cn[ext]])) next
mymat[row.names(mymat)==rn[int],colnames(mymat)==cn[ext]]<-x[row.names(x)==rn[int],colnames(x)==cn[ext]]
mymat[row.names(mymat)==cn[ext],colnames(mymat)==rn[int]]<-x[row.names(x)==rn[int],colnames(x)==cn[ext]]
}
}
return(mymat)
}
het_cocl <- read.table("data/heterozygosity/het_cocl.tsv",fill = T)
whitefish_assignment <- read.table("data/dispersal_model/whitefish_assignment.txt",header=T)
whitefish_assignment %<>% mutate(site = case_when(str_detect(id,"ROG") ~ "ROG",
str_detect(id,"CHIm") ~ "KAA",
str_detect(id,"BIA") ~ "BIA",
str_detect(id,"LAG") & best_lik == "La_Grande" ~ "LAG",
str_detect(id,"LAG") & best_lik == "Roggan" ~ "ROG",
str_detect(id,"LAG") & best_lik == "Sabacunica" ~ "LAG",
str_detect(id,"BEA") ~ "BEA",
str_detect(id,"SAB") ~ "SAB",
str_detect(id,"MOA") ~ "SAB",
str_detect(id,"REN") ~ "REN",
str_detect(id,"TIL") ~ "REN",
str_detect(id,"CON") ~ "CON",
str_detect(id,"EAS") ~ "EAS",
str_detect(id,"FIS") ~ "EAS",
str_detect(id,"JAC") ~ "JAC",
str_detect(id,"RUP") ~ "RUP",
str_detect(id,"NOT") ~ "NOT"))
whitefish_assignment %<>% mutate(best_lik2 = case_when(str_detect(best_lik,"Roggan") ~ "ROG",
str_detect(best_lik,"Kaapsaoui") ~ "KAA",
str_detect(best_lik,"Biagadwshi") ~ "BIA-L",
str_detect(best_lik,"La_Grande") ~ "BIA-L",
str_detect(best_lik,"Beaver") ~ "BEA",
str_detect(best_lik,"Sabacunica") ~ "SAB",
str_detect(best_lik,"Eastmain") ~ "EAS-C",
str_detect(best_lik,"Rupert") ~ "RUP",
str_detect(best_lik,"Nottaway") ~ "NOT"))
whitefish_assignment %<>% mutate(id2 = gsub("cocl","",whitefish_assignment$id))
het_cocl %<>% left_join(whitefish_assignment,by = c("V1"="id2"))
cocl_f <- read.table("data/heterozygosity/ngsf_cocl")
cocl_f
het_cocl$f <- cocl_f$V1
het_safo <- read.table("data/heterozygosity/het_safo.tsv")
trout_assignment <- read.table("data/dispersal_model/trout_assignment.txt",header=T)
trout_assignment %<>% mutate(site = case_when(str_detect(id,"ROG") ~ "ROG",
str_detect(id,"CHIm") ~ "KAA",
str_detect(id,"BIA") ~ "BIA",
str_detect(id,"LAG") ~ "LAG",
str_detect(id,"AQU") ~ "AQU",
str_detect(id,"BEA") ~ "BEA",
str_detect(id,"SAB") ~ "SAB",
str_detect(id,"MOA") ~ "SAB",
str_detect(id,"REN") ~ "REN",
str_detect(id,"CON") ~ "CON",
str_detect(id,"EAS") ~ "EAS",
str_detect(id,"FIS") ~ "EAS",
str_detect(id,"BRO") ~ "BRO"))
trout_assignment %<>% mutate(best_lik2 = case_when(str_detect(best_lik,"Roggan") ~ "ROG-K",
str_detect(best_lik,"Kaapsaoui") ~ "ROG-K",
str_detect(best_lik,"Biagadwshi") ~ "BIA",
str_detect(best_lik,"La_Grande") ~ "LAG",
str_detect(best_lik,"Aquatuc") ~ "AQU",
str_detect(best_lik,"Beaver") ~ "BEA",
str_detect(best_lik,"Sabacunica") ~ "SAB",
str_detect(best_lik,"Renoyer") ~ "REN",
str_detect(best_lik,"Conn") ~ "CON",
str_detect(best_lik,"Eastmain") ~ "EAS",
str_detect(best_lik,"Broadback") ~ "BRO"))
trout_assignment %<>% mutate(id2 = gsub("safo","",trout_assignment$id))
het_safo %<>% left_join(trout_assignment,by = c("V1"="id2"))
het <- rbind(het_cocl,het_safo)
safo_f <- read.table("data/heterozygosity/ngsf_safo")
het_safo$f <- safo_f$V1
het <- rbind(het_cocl,het_safo)
het$sp <- c(rep("cocl",456),rep("safo",362))
het$site <- factor(het$site,levels = c("ROG","KAA","BIA","LAG","AQU","BEA","SAB","REN","CON","EAS","JAC","RUP","BRO","NOT"))
het
ggplot(het %>% filter(!is.na(site)),aes(x = sp, y = f))+
geom_boxplot(width = .2,
outlier.shape = NA, notch = T)+
gghalves::geom_half_point(
side = "l",
range_scale = .2,
alpha = .2,
size = 2
) +
scale_x_discrete(labels=c("cocl" = expression(italic("C. clupeaformis")),
"safo" = expression(italic("S. fontinalis"))))+
xlab("")+
ylab("Multi-locus heterozygosity")+
theme_bw()+
theme(axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_blank(),
legend.text = element_text(size = 18),
legend.position = "none",
strip.text = element_text(size = 18),
strip.background = element_rect(fill = "white"),panel.spacing = unit(2, "lines"))
ggplot(het %>% filter(!is.na(site)),aes(x = sp, y = f))+
geom_boxplot(width = .2,
outlier.shape = NA, notch = T)+
gghalves::geom_half_point(
side = "l",
range_scale = .2,
alpha = .2,
size = 2
) +
scale_x_discrete(labels=c("cocl" = expression(italic("C. clupeaformis")),
"safo" = expression(italic("S. fontinalis"))))+
xlab("")+
ylim(c(0,0.005))+
ylab("Inbreeding coefficient (F)")+
theme_bw()+
theme(axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_blank(),
legend.text = element_text(size = 18),
legend.position = "none",
strip.text = element_text(size = 18),
strip.background = element_rect(fill = "white"),panel.spacing = unit(2, "lines"))
ggplot(het %>% filter(!is.na(site)),aes(x = sp, y = f))+
geom_boxplot(width = .2,
outlier.shape = NA)+
gghalves::geom_half_point(
side = "l",
range_scale = .2,
alpha = .2,
size = 2
) +
scale_x_discrete(labels=c("cocl" = expression(italic("C. clupeaformis")),
"safo" = expression(italic("S. fontinalis"))))+
xlab("")+
ylim(c(0,0.005))+
ylab("Inbreeding coefficient (F)")+
theme_bw()+
theme(axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_blank(),
legend.text = element_text(size = 18),
legend.position = "none",
strip.text = element_text(size = 18),
strip.background = element_rect(fill = "white"),panel.spacing = unit(2, "lines"))
ggplot(het %>% filter(!is.na(site)),aes(x = f, fill = sp))+
geom_density()+
xlab("")+
ylab("Inbreeding coefficient (F)")+
theme_bw()+
theme(axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_blank(),
legend.text = element_text(size = 18),
legend.position = "none",
strip.text = element_text(size = 18),
strip.background = element_rect(fill = "white"),panel.spacing = unit(2, "lines"))
ggplot(het %>% filter(!is.na(site)),aes(x = f, fill = sp))+
geom_density()+
xlab("")+
xlim(c(0,0.005))+
ylab("Inbreeding coefficient (F)")+
theme_bw()+
theme(axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_blank(),
legend.text = element_text(size = 18),
legend.position = "none",
strip.text = element_text(size = 18),
strip.background = element_rect(fill = "white"),panel.spacing = unit(2, "lines"))
wilcox.test(safo_f ~ cocl_f)
f <- cbind(safo_f,cocl_f)
wilcox.test(het$f ~ het$sp)
ggplot(het %>% filter(!is.na(site)),aes(x = sp, y = f))+
geom_boxplot(width = .2,
outlier.shape = NA)+
gghalves::geom_half_point(
side = "l",
range_scale = .2,
alpha = .2,
size = 2
) +
scale_x_discrete(labels=c("cocl" = expression(italic("C. clupeaformis")),
"safo" = expression(italic("S. fontinalis"))))+
xlab("")+
ylim(c(0,0.005))+
ylab("Inbreeding coefficient (F)")+
theme_bw()+
theme(axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_blank(),
legend.text = element_text(size = 18),
legend.position = "none",
strip.text = element_text(size = 18),
strip.background = element_rect(fill = "white"),panel.spacing = unit(2, "lines"))
ggplot(het %>% filter(!is.na(site)),aes(x = sp, y = log(f+0.000000001))+
ggplot(het %>% filter(!is.na(site)),aes(x = sp, y = log(f+0.000000001)))+
geom_boxplot(width = .2,
outlier.shape = NA)+
gghalves::geom_half_point(
side = "l",
range_scale = .2,
alpha = .2,
size = 2
) +
scale_x_discrete(labels=c("cocl" = expression(italic("C. clupeaformis")),
"safo" = expression(italic("S. fontinalis"))))+
xlab("")+
ylim(c(0,0.005))+
ylab("Inbreeding coefficient (F)")+
theme_bw()+
theme(axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_blank(),
legend.text = element_text(size = 18),
legend.position = "none",
strip.text = element_text(size = 18),
strip.background = element_rect(fill = "white"),panel.spacing = unit(2, "lines"))
ggplot(het %>% filter(!is.na(site)),aes(x = sp, y = log(f+0.000000001)))+
geom_boxplot(width = .2,
outlier.shape = NA)+
gghalves::geom_half_point(
side = "l",
range_scale = .2,
alpha = .2,
size = 2
) +
scale_x_discrete(labels=c("cocl" = expression(italic("C. clupeaformis")),
"safo" = expression(italic("S. fontinalis"))))+
xlab("")+
ylim(c(0,0.005))+
ylab("Inbreeding coefficient (F)")+
theme_bw()+
theme(axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_blank(),
legend.text = element_text(size = 18),
legend.position = "none",
strip.text = element_text(size = 18),
strip.background = element_rect(fill = "white"),panel.spacing = unit(2, "lines"))
ggplot(het %>% filter(!is.na(site)),aes(x = sp, y = log(f+0.000000001)))+
gghalves::geom_half_point(
side = "l",
range_scale = .2,
alpha = .2,
size = 2
) +
scale_x_discrete(labels=c("cocl" = expression(italic("C. clupeaformis")),
"safo" = expression(italic("S. fontinalis"))))+
xlab("")+
ylab("Inbreeding coefficient (F)")+
theme_bw()+
theme(axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_blank(),
legend.text = element_text(size = 18),
legend.position = "none",
strip.text = element_text(size = 18),
strip.background = element_rect(fill = "white"),panel.spacing = unit(2, "lines"))
qqplot(het$f,het$sp)
qqplot(het_cocl,het_cocl)
qqplot(het_cocl,het_safo)
cbind(cocl_f,safo_f)
ggplot(het %>% filter(!is.na(site)),aes(x = sp, y = asinh(f)))+
gghalves::geom_half_point(
side = "l",
range_scale = .2,
alpha = .2,
size = 2
) +
scale_x_discrete(labels=c("cocl" = expression(italic("C. clupeaformis")),
"safo" = expression(italic("S. fontinalis"))))+
xlab("")+
ylim(c(0,0.005))+
ylab("Inbreeding coefficient (F)")+
theme_bw()+
theme(axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_blank(),
legend.text = element_text(size = 18),
legend.position = "none",
strip.text = element_text(size = 18),
strip.background = element_rect(fill = "white"),panel.spacing = unit(2, "lines"))
ggplot(het %>% filter(!is.na(site)),aes(x = sp, y = asinh(f)))+
gghalves::geom_half_point(
side = "l",
range_scale = .2,
alpha = .2,
size = 2
) +
scale_x_discrete(labels=c("cocl" = expression(italic("C. clupeaformis")),
"safo" = expression(italic("S. fontinalis"))))+
xlab("")+
ylab("Inbreeding coefficient (F)")+
theme_bw()+
theme(axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_blank(),
legend.text = element_text(size = 18),
legend.position = "none",
strip.text = element_text(size = 18),
strip.background = element_rect(fill = "white"),panel.spacing = unit(2, "lines"))
qqplot(cocl_f$V1,safo_f$V1)
abline(c(0,1))
qqplot(safo_f$V1,cocl_f$V1)
abline(c(0,1))
install.packages("tukeydar")
install.packages("tukeyedar")
install.packages("tukeyedar")
devtools::install_github("mgimond/tukeyedar")
library(tukeyedar)
eda_qq(safo_f$V1,cocl_f$V1)
eda_qq(safo_f$V1,cocl_f$V1,fx = "x * 11.6834 + (0)")
eda_qq(safo_f$V1,cocl_f$V1)
eda_qq(safo_f$V1,cocl_f$V1,fx = "x * 11.6834 + (0)")
eda_qq(safo_f$V1,cocl_f$V1)
eda_qq(safo_f$V1,cocl_f$V1,md=T)
eda_qq(safo_f$V1,cocl_f$V1)
library(tidyverse)
library(magrittr)
library(paletteer)
library(plotly)
library(vegan)
library(ggridges)
cov <- read.table("~/Desktop/Baie_James_Paper/01_population_genomics/whitefish_pop_gen/data/all_maf0.05pctind0.8_maxdepth10_ALL_CHR.singletons.pruned.cov")
pca <- rda(cov)
summary(pca)
screeplot(pca,bstick = T)
png("~/Desktop/Baie_James_Paper/01_population_genomics/whitefish_pop_gen/figure/broken_stick_pca.jpeg")
screeplot(pca,bstick = T)
dev.off()
screeplot(pca)
library(tidyverse)
library(xlsx)
data_disp <- read.xlsx("~/Downloads/dataverse_files/Supplementary_material3.xlsx")
data_disp <- read.xlsx("~/Downloads/dataverse_files/Supplementary_material3.xlsx")
data_disp <- read.xlsx("~/Downloads/dataverse_files/Supplementary_material3.xlsx",sheetName = "ALL")
View(data_disp)
data_disp %>% filter(metric == "immigration rate")
data_imm <- data_disp %>% filter(metric == "immigration rate")
data_imm %>% group_by(species) %>% summarise(mean_imm = mean(estimated_rate,na.rm = T),
min_imm = min(estimated_rate,na.rm = T),
max_imm = max(estimated_rate,na.rm = T))
data_imm$estimated_rate <- as.numeric(data_imm$estimated_rate)
data_imm %>% group_by(species) %>% summarise(mean_imm = mean(estimated_rate,na.rm = T),
min_imm = min(estimated_rate,na.rm = T),
max_imm = max(estimated_rate,na.rm = T))
data_imm %>% group_by(species) %>% summarise(mean_imm = median(estimated_rate,na.rm = T),
min_imm = min(estimated_rate,na.rm = T),
max_imm = max(estimated_rate,na.rm = T))
data_imm %>% group_by(species) %>% summarise(mean_imm = mean(estimated_rate,na.rm = T),
min_imm = min(estimated_rate,na.rm = T),
max_imm = max(estimated_rate,na.rm = T))
data_imm %>% group_by(species, category) %>% summarise(mean_imm = mean(estimated_rate,na.rm = T),
min_imm = min(estimated_rate,na.rm = T),
max_imm = max(estimated_rate,na.rm = T))
data_imm %>% group_by(species) %>% filter(category == "Wild estimate") %>%
summarise(mean_imm = mean(estimated_rate,na.rm = T),
min_imm = min(estimated_rate,na.rm = T),
max_imm = max(estimated_rate,na.rm = T))
data_imm %>% group_by(species) %>% filter(category == "Wild estimate") %>%
summarise(mean_imm = median(estimated_rate,na.rm = T),
min_imm = min(estimated_rate,na.rm = T),
max_imm = max(estimated_rate,na.rm = T))
library(tidyverse)
library(xlsx)
data_disp <- read.xlsx("~/Downloads/dataverse_files/Supplementary_material3.xlsx",sheetName = "ALL")
data_imm <- data_disp %>% filter(metric == "immigration rate")
data_imm$estimated_rate <- as.numeric(data_imm$estimated_rate)
data_imm %>% group_by(species) %>% filter(category == "Wild estimate") %>%
summarise(mean_imm = median(estimated_rate,na.rm = T),
min_imm = min(estimated_rate,na.rm = T),
max_imm = max(estimated_rate,na.rm = T))
data_imm %>% group_by(species) %>%
summarise(mean_imm = median(estimated_rate,na.rm = T),
min_imm = min(estimated_rate,na.rm = T),
max_imm = max(estimated_rate,na.rm = T))
data_imm <- data_disp %>% filter(metric == "emmigration rate")
data_imm$estimated_rate <- as.numeric(data_imm$estimated_rate)
data_imm %>% group_by(species) %>%
summarise(mean_imm = median(estimated_rate,na.rm = T),
min_imm = min(estimated_rate,na.rm = T),
max_imm = max(estimated_rate,na.rm = T))
data_imm <- data_disp %>% filter(metric == "emigration rate")
data_imm$estimated_rate <- as.numeric(data_imm$estimated_rate)
data_imm %>% group_by(species) %>%
summarise(mean_imm = median(estimated_rate,na.rm = T),
min_imm = min(estimated_rate,na.rm = T),
max_imm = max(estimated_rate,na.rm = T))
data_imm <- data_disp %>% filter(metric == "immigration rate")
data_imm$estimated_rate <- as.numeric(data_imm$estimated_rate)
data_imm %>% group_by(species) %>%
summarise(mean_imm = mean(estimated_rate,na.rm = T),
min_imm = min(estimated_rate,na.rm = T),
max_imm = max(estimated_rate,na.rm = T))
library(tidyverse)
library(xlsx)
data_disp <- read.xlsx("~/Downloads/dataverse_files/Supplementary_material3.xlsx",sheetName = "ALL")
data_imm <- data_disp %>% filter(metric == "immigration rate")
data_imm$estimated_rate <- as.numeric(data_imm$estimated_rate)
data_imm %>% group_by(species) %>%
summarise(mean_imm = mean(estimated_rate,na.rm = T),
min_imm = min(estimated_rate,na.rm = T),
max_imm = max(estimated_rate,na.rm = T))
data_imm %>% group_by(species) %>% filter(wild_hatchery == "wild")
data_imm %>% group_by(species) %>% filter(wild_hatchery == "wild") %>%
summarise(mean_imm = mean(estimated_rate,na.rm = T),
min_imm = min(estimated_rate,na.rm = T),
max_imm = max(estimated_rate,na.rm = T))
library(tidyverse)
library(magrittr)
library(paletteer)
library(plotly)
library(vegan)
library(ggridges)
cov <- read.table("~/Desktop/Baie_James_Paper/01_population_genomics/whitefish_pop_gen/data/all_maf0.05pctind0.8_maxdepth10_ALL_CHR.singletons.pruned.cov")
pca <- rda(cov)
summary(pca)
screeplot(pca)
